// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.5.0 <0.9.0;

contract finalboss{
    address  public manager;
    address payable [] public players;

    constructor(){
        manager=msg.sender;
    }

    receive() external payable {
        require(msg.value >=2 ether);
        players.push(payable(msg.sender));
    }

    function randomNumber() public view returns (uint) {
        require(players.length > 0);
        return uint(keccak256(abi.encodePacked(block.difficulty,block.timestamp,players.length)));
    }

    function totalmoneycollected() public view returns (uint){
        return address(this).balance;
    }

    function selectwinner() public {
        require(players.length > 0);
        uint rand ;
        rand = randomNumber();
        rand =rand%(players.length);
        address payable winner ;
        winner = players[rand];
        winner.transfer(totalmoneycollected());
    }
}
